apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    kubernetes.io/ingress.property: '[{"host":"DOMAIN_NAME","path":"/","compareType":"EQUAL_TO","protocol":"HTTP"}]'
    kubernetes.io/load-balancer-port: "443"
    kubernetes.io/load-balancer-protocol: TERMINATED_HTTPS
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/cors-allow-headers: DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,elastic-apm-traceparent
    nginx.ingress.kubernetes.io/cors-allow-methods: PUT, GET, POST, OPTIONS, DELETE
    nginx.ingress.kubernetes.io/cors-allow-origin: '*'
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/proxy-buffer-size: 512k
    nginx.ingress.kubernetes.io/proxy-buffers: 512 512k
    nginx.ingress.kubernetes.io/proxy_set_header: Connection upgrade
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/websocket-services: "true"
  name: PROJECT_NAME
spec:
  rules:
  - host: DOMAIN_NAME
    http:
      paths:
      - backend:
          serviceName: PROJECT_NAME
          servicePort: PROJECT_PORT
        path: /
  # - host: Template2Domain
  #   http:
  #     paths:
  #     - backend:
  #         serviceName: PROJECT_NAME
  #         servicePort: PROJECT_PORT
  #       path: /api/PROJECT_NAME/
  tls:
  - hosts:
    - DOMAIN_NAME
    secretName: SECRET_TLS
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  name: PROJECT_NAME
spec:
  ports:
  - port: PROJECT_PORT
    targetPort: PROJECT_PORT
  selector:
    app: PROJECT_NAME
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: PROJECT_NAME
spec:
  # 如果被指定， .spec.selector 必须匹配 .spec.template.metadata.labels，否则它将被API拒绝。如果 .spec.selector 没有被指定， .spec.selector.matchLabels 默认是 .spec.template.metadata.labels。
  selector:
    matchLabels:
      app: PROJECT_NAME
  replicas: K8S_REPLICAS
  template:
    metadata:
      annotations:
        dapr.io/app-id: PROJECT_NAMEDAPR_ID_PATH
        dapr.io/app-port: "PROJECT_PORT"
        dapr.io/enabled: "true"
      labels:
        app: PROJECT_NAME
    spec:
      containers:
      - env:
        - name: ASPNETCORE_ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              key: ASPNETCORE_ENVIRONMENT
              name: aspnetcore-environment
              optional: false
        - name: APP_ID_SUFFIX
          valueFrom:
            configMapKeyRef:
              key: APP_ID_SUFFIX
              name: app-id-suffix
              optional: false
        volumeMounts:
        - mountPath: /etc/localtime
          name: date-config
        name: PROJECT_NAME
        image: DOCKER_IMAGE_NAME
        ports:
        - containerPort: PROJECT_PORT
        imagePullPolicy: Always
      volumes:
      - hostPath:
          path: /etc/localtime
          type: File
        name: date-config
      imagePullSecrets:
      - name: K8S_IMAGEPULLSECRETSPULL